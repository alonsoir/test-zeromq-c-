name: CI Pipeline - C++20 Sniffer

on:
  push:
    branches:
      - main
      - '**'       # Cualquier rama
    tags:
      - '**'       # Cualquier tag
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 120

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update apt & pre-accept VirtualBox license
        run: |
          sudo apt-get update -y
          echo virtualbox-ext-pack virtualbox-ext-pack/license select true | sudo debconf-set-selections
          sudo apt-get install -y \
            build-essential \
            curl \
            jq \
            netcat-openbsd \
            qemu-kvm \
            libvirt-daemon-system \
            libvirt-clients \
            virt-manager \
            virtualbox \
            virtualbox-dkms \
            virtualbox-ext-pack
          sudo modprobe kvm

      - name: Install Docker & Docker Compose
        run: |
          if ! command -v docker >/dev/null 2>&1; then
            curl -fsSL https://get.docker.com -o get-docker.sh
            sh get-docker.sh
            sudo usermod -aG docker $USER
            sudo systemctl enable docker
            sudo systemctl start docker
            rm get-docker.sh
          fi
          if ! command -v docker-compose >/dev/null 2>&1; then
            sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi

      - name: Verify installations
        run: |
          docker --version
          docker-compose --version
          vboxmanage --version

      - name: Start Vagrant VM and provision
        run: |
          vagrant up --provider=virtualbox
          vagrant ssh -c "echo '✅ VM provisioned and ready'"

      - name: Build Docker images
        run: |
          docker-compose build --pull

      - name: Launch Docker services
        run: |
          docker-compose up -d

      - name: Wait for services to be healthy
        run: |
          echo "⏳ Waiting for etcd, service1, service2..."
          docker-compose ps
          sleep 15

      - name: Start C++ Sniffer
        run: |
          make sniffer-start

      - name: List running containers
        run: docker ps
