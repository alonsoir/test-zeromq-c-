name: CI/CD Pipeline v3.1 - Sniffer & Docker

on:
  push:
    branches:
      - '**'
    tags:
      - '*'
  pull_request:
    branches:
      - '**'

jobs:
  build-and-run:
    name: Build & Run Full Environment
    runs-on: ubuntu-latest
    timeout-minutes: 180  # 3 horas, ajustable seg√∫n compilaci√≥n y VM

    env:
      VAGRANT_DEBIAN_BOX: "debian/bookworm64"
      VAGRANT_DEBIAN_VERSION: "12.20240905.1"
      DOCKER_COMPOSE_FILE: "./docker-compose.yaml"

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Necesario para tags y ramas completas

      - name: Set up QEMU & Virtualization (Nested VM)
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-kvm libvirt-daemon-system libvirt-clients virt-manager virtualbox virtualbox-ext-pack virtualbox-dkms build-essential curl jq netcat-openbsd
          sudo modprobe kvm

      - name: Verify Virtualization
        run: |
          if grep -E -c '(vmx|svm)' /proc/cpuinfo; then
            echo "‚úÖ Virtualization supported"
          else
            echo "‚ö†Ô∏è Virtualization NOT detected"
          fi

      - name: Install Vagrant
        run: |
          sudo apt-get install -y vagrant

      - name: Install VirtualBox
        run: |
          sudo apt-get install -y virtualbox virtualbox-ext-pack

      - name: Bring up Vagrant VM
        run: |
          vagrant up --provider=virtualbox

      - name: SSH into Vagrant & Update Debian
        run: |
          vagrant ssh -c "sudo apt-get update && sudo apt-get upgrade -y"

      - name: Build Docker Images
        run: |
          vagrant ssh -c "cd /vagrant && docker-compose -f $DOCKER_COMPOSE_FILE build --pull --no-cache"

      - name: Start Docker Compose Services
        run: |
          vagrant ssh -c "cd /vagrant && docker-compose -f $DOCKER_COMPOSE_FILE up -d etcd service1 service2 service3"

      - name: Wait for services to become healthy
        run: |
          echo "‚è≥ Esperando que etcd y servicios est√©n listos..."
          vagrant ssh -c "docker-compose -f $DOCKER_COMPOSE_FILE ps"

      - name: Start Sniffer
        run: |
          vagrant ssh -c "cd /vagrant && make sniffer-start"

      - name: Verify Sniffer & Services
        run: |
          vagrant ssh -c "docker ps -a"
          vagrant ssh -c "ps aux | grep sniffer || true"

      - name: Collect Logs
        run: |
          mkdir -p ./ci-logs
          vagrant ssh -c "cp -r /vagrant/logs/* /vagrant/ci-logs/" || true
          cp -r ./ci-logs ./logs || true

      - name: Cleanup (optional)
        if: always()
        run: |
          echo "üí° Puedes comentar esto para mantener VM activa"
          # vagrant destroy -f
