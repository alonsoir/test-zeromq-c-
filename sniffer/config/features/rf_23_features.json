{
  "_header": "Level 1 Attack Detection Features - Random Forest",
  "_version": "1.0.0",
  "_date": "2025-10-28",
  "_feature_count": 23,
  "_description": "General attack detection features for Level 1 binary classification (BENIGN vs ATTACK)",
  "_source": "Reconstructed from level1_attack_detector_metadata.json and feature_extractor.cpp",

  "model_info": {
    "model_name": "level1_attack_detector",
    "model_file": "level1/level1_attack_detector.onnx",
    "accuracy": 0.9987529784562015,
    "precision": 0.9944321010787804,
    "recall": 0.999264765218015,
    "f1_score": 0.9968425760286226,
    "roc_auc": 0.9999393864175975,
    "classes": ["BENIGN", "ATTACK"],
    "training_date": "2025-10-15",
    "dataset_source": "CIC-IDS2017 (subset)"
  },

  "extraction_info": {
    "code_location": "sniffer/src/userspace/feature_extractor.cpp",
    "total_features_extracted": 83,
    "level1_uses_first": 23,
    "extraction_method": "flow-based aggregation",
    "flow_window_seconds": 300
  },

  "critical_note": {
    "IMPORTANT": "The order of features in this JSON MUST match the order expected by the ONNX model",
    "REASON": "Model was trained with specific feature order from CIC-IDS2017 dataset",
    "MAPPING": "Feature names have leading spaces (from original CSV) - preserved for compatibility"
  },

  "features": [
    {
      "id": 1,
      "name": "Packet Length Std",
      "model_name": " Packet Length Std",
      "type": "float",
      "unit": "bytes",
      "description": "Standard deviation of packet lengths (forward + backward)",
      "cpp_mapping": "PACKET_LEN_STD (feature_extractor.cpp line 106)",
      "extraction_function": "extract_packet_len_std",
      "category": "packet_size",
      "window": "flow_lifetime",
      "expected_range": [0.0, 10000.0]
    },
    {
      "id": 2,
      "name": "Subflow Fwd Bytes",
      "model_name": " Subflow Fwd Bytes",
      "type": "float",
      "unit": "bytes",
      "description": "Average forward bytes per subflow (window-based aggregation)",
      "cpp_mapping": "SUBFLOW_FWD_BYTES (feature_extractor.cpp line 156)",
      "extraction_function": "extract_subflow_fwd_bytes",
      "category": "subflow",
      "window": "time_windows",
      "expected_range": [0.0, 1000000.0]
    },
    {
      "id": 3,
      "name": "Fwd Packet Length Max",
      "model_name": " Fwd Packet Length Max",
      "type": "float",
      "unit": "bytes",
      "description": "Maximum forward packet length",
      "cpp_mapping": "FWD_LEN_MAX (feature_extractor.cpp line 126)",
      "extraction_function": "extract_fwd_len_max",
      "category": "packet_size",
      "window": "flow_lifetime",
      "expected_range": [0.0, 65535.0]
    },
    {
      "id": 4,
      "name": "Avg Fwd Segment Size",
      "model_name": " Avg Fwd Segment Size",
      "type": "float",
      "unit": "bytes",
      "description": "Average forward segment size (bytes/packet)",
      "cpp_mapping": "AVG_FWD_SEGMENT_SIZE (feature_extractor.cpp line 178)",
      "extraction_function": "extract_avg_fwd_segment_size",
      "category": "packet_size",
      "window": "flow_lifetime",
      "expected_range": [0.0, 65535.0]
    },
    {
      "id": 5,
      "name": "ACK Flag Count",
      "model_name": " ACK Flag Count",
      "type": "int",
      "unit": "count",
      "description": "Number of packets with ACK flag set",
      "cpp_mapping": "ACK_FLAG_COUNT (feature_extractor.cpp line 112)",
      "extraction_function": "direct from flow.ack_count",
      "category": "tcp_flags",
      "window": "flow_lifetime",
      "expected_range": [0, 100000]
    },
    {
      "id": 6,
      "name": "Packet Length Variance",
      "model_name": " Packet Length Variance",
      "type": "float",
      "unit": "bytes^2",
      "description": "Variance of packet lengths (forward + backward)",
      "cpp_mapping": "PACKET_LEN_VAR (feature_extractor.cpp line 107)",
      "extraction_function": "extract_packet_len_var",
      "category": "packet_size",
      "window": "flow_lifetime",
      "expected_range": [0.0, 100000000.0]
    },
    {
      "id": 7,
      "name": "PSH Flag Count",
      "model_name": " PSH Flag Count",
      "type": "int",
      "unit": "count",
      "description": "Number of packets with PSH flag set",
      "cpp_mapping": "PSH_FLAG_COUNT (feature_extractor.cpp line 111)",
      "extraction_function": "direct from flow.psh_count",
      "category": "tcp_flags",
      "window": "flow_lifetime",
      "expected_range": [0, 100000]
    },
    {
      "id": 8,
      "name": "Bwd Packet Length Max",
      "model_name": "Bwd Packet Length Max",
      "type": "float",
      "unit": "bytes",
      "description": "Maximum backward packet length",
      "cpp_mapping": "BWD_LEN_MAX (feature_extractor.cpp line 129)",
      "extraction_function": "extract_bwd_len_max",
      "category": "packet_size",
      "window": "flow_lifetime",
      "expected_range": [0.0, 65535.0]
    },
    {
      "id": 9,
      "name": "act_data_pkt_fwd",
      "model_name": " act_data_pkt_fwd",
      "type": "int",
      "unit": "count",
      "description": "Count of active forward data packets (packets with payload)",
      "cpp_mapping": "Derived from flow statistics (not explicit in current code)",
      "extraction_function": "calculate from flow.spkts with payload",
      "category": "activity",
      "window": "flow_lifetime",
      "expected_range": [0, 100000],
      "note": "May need to verify exact mapping in code"
    },
    {
      "id": 10,
      "name": "Total Length of Fwd Packets",
      "model_name": "Total Length of Fwd Packets",
      "type": "int",
      "unit": "bytes",
      "description": "Total bytes sent in forward direction",
      "cpp_mapping": "FWD_LEN_TOT or SBYTES (feature_extractor.cpp line 94/128)",
      "extraction_function": "extract_fwd_len_tot or direct from flow.sbytes",
      "category": "volume",
      "window": "flow_lifetime",
      "expected_range": [0, 10000000000]
    },
    {
      "id": 11,
      "name": "Fwd Packet Length Std",
      "model_name": " Fwd Packet Length Std",
      "type": "float",
      "unit": "bytes",
      "description": "Standard deviation of forward packet lengths",
      "cpp_mapping": "FWD_LEN_STD (feature_extractor.cpp line 152)",
      "extraction_function": "extract_fwd_len_std",
      "category": "packet_size",
      "window": "flow_lifetime",
      "expected_range": [0.0, 10000.0]
    },
    {
      "id": 12,
      "name": "Fwd Packets/s",
      "model_name": "Fwd Packets/s",
      "type": "float",
      "unit": "packets/second",
      "description": "Forward packet rate (packets per second)",
      "cpp_mapping": "SRATE (feature_extractor.cpp line 118)",
      "extraction_function": "extract_srate",
      "category": "rate",
      "window": "flow_lifetime",
      "expected_range": [0.0, 1000000.0]
    },
    {
      "id": 13,
      "name": "Subflow Bwd Bytes",
      "model_name": " Subflow Bwd Bytes",
      "type": "float",
      "unit": "bytes",
      "description": "Average backward bytes per subflow (window-based aggregation)",
      "cpp_mapping": "SUBFLOW_BWD_BYTES (feature_extractor.cpp line 158)",
      "extraction_function": "extract_subflow_bwd_bytes",
      "category": "subflow",
      "window": "time_windows",
      "expected_range": [0.0, 1000000.0]
    },
    {
      "id": 14,
      "name": "Destination Port",
      "model_name": " Destination Port",
      "type": "int",
      "unit": "port_number",
      "description": "Destination port number",
      "cpp_mapping": "flow.dst_port (from flow 5-tuple)",
      "extraction_function": "direct from flow key",
      "category": "network",
      "window": "flow_lifetime",
      "expected_range": [0, 65535],
      "note": "Common ports: 80 (HTTP), 443 (HTTPS), 22 (SSH)"
    },
    {
      "id": 15,
      "name": "Init_Win_bytes_forward",
      "model_name": "Init_Win_bytes_forward",
      "type": "int",
      "unit": "bytes",
      "description": "Initial TCP window size in forward direction (from SYN packet)",
      "cpp_mapping": "INIT_FWD_WIN_BYTES (feature_extractor.cpp line 165)",
      "extraction_function": "extract_init_fwd_win_bytes",
      "category": "tcp_window",
      "window": "flow_start",
      "expected_range": [0, 1073725440],
      "note": "Typical values: 8192, 16384, 65535"
    },
    {
      "id": 16,
      "name": "Subflow Fwd Packets",
      "model_name": "Subflow Fwd Packets",
      "type": "float",
      "unit": "packets",
      "description": "Average forward packets per subflow (window-based aggregation)",
      "cpp_mapping": "SUBFLOW_FWD_PACKETS (feature_extractor.cpp line 155)",
      "extraction_function": "extract_subflow_fwd_packets",
      "category": "subflow",
      "window": "time_windows",
      "expected_range": [0.0, 100000.0]
    },
    {
      "id": 17,
      "name": "Fwd IAT Min",
      "model_name": " Fwd IAT Min",
      "type": "float",
      "unit": "microseconds",
      "description": "Minimum inter-arrival time between forward packets",
      "cpp_mapping": "FWD_IAT_MIN (feature_extractor.cpp line 141)",
      "extraction_function": "extract_fwd_iat_min",
      "category": "timing",
      "window": "flow_lifetime",
      "expected_range": [0.0, 1000000000.0]
    },
    {
      "id": 18,
      "name": "Packet Length Mean",
      "model_name": " Packet Length Mean",
      "type": "float",
      "unit": "bytes",
      "description": "Mean packet length (forward + backward)",
      "cpp_mapping": "PACKET_LEN_MEAN (feature_extractor.cpp line 105)",
      "extraction_function": "extract_packet_len_mean",
      "category": "packet_size",
      "window": "flow_lifetime",
      "expected_range": [0.0, 65535.0]
    },
    {
      "id": 19,
      "name": "Total Length of Bwd Packets",
      "model_name": " Total Length of Bwd Packets",
      "type": "int",
      "unit": "bytes",
      "description": "Total bytes received in backward direction",
      "cpp_mapping": "BWD_LEN_TOT or DBYTES (feature_extractor.cpp line 95/131)",
      "extraction_function": "extract_bwd_len_tot or direct from flow.dbytes",
      "category": "volume",
      "window": "flow_lifetime",
      "expected_range": [0, 10000000000]
    },
    {
      "id": 20,
      "name": "Bwd Packet Length Mean",
      "model_name": " Bwd Packet Length Mean",
      "type": "float",
      "unit": "bytes",
      "description": "Mean backward packet length",
      "cpp_mapping": "DMEAN (feature_extractor.cpp line 98)",
      "extraction_function": "extract_dmean",
      "category": "packet_size",
      "window": "flow_lifetime",
      "expected_range": [0.0, 65535.0]
    },
    {
      "id": 21,
      "name": "Bwd Packet Length Min",
      "model_name": " Bwd Packet Length Min",
      "type": "float",
      "unit": "bytes",
      "description": "Minimum backward packet length",
      "cpp_mapping": "BWD_LEN_MIN (feature_extractor.cpp line 130)",
      "extraction_function": "extract_bwd_len_min",
      "category": "packet_size",
      "window": "flow_lifetime",
      "expected_range": [0.0, 65535.0]
    },
    {
      "id": 22,
      "name": "Flow Duration",
      "model_name": " Flow Duration",
      "type": "int",
      "unit": "microseconds",
      "description": "Duration of the flow (last_packet_time - first_packet_time)",
      "cpp_mapping": "DURATION (feature_extractor.cpp line 91)",
      "extraction_function": "direct from flow.get_duration_us()",
      "category": "timing",
      "window": "flow_lifetime",
      "expected_range": [0, 10000000000]
    },
    {
      "id": 23,
      "name": "Flow Packets/s",
      "model_name": " Flow Packets/s",
      "type": "float",
      "unit": "packets/second",
      "description": "Overall flow packet rate (total packets / duration)",
      "cpp_mapping": "FLOW_PKTS_PER_SEC (feature_extractor.cpp line 172)",
      "extraction_function": "extract_flow_pkts_per_sec",
      "category": "rate",
      "window": "flow_lifetime",
      "expected_range": [0.0, 1000000.0]
    }
  ],

  "feature_categories": {
    "packet_size": {
      "count": 10,
      "features": [1, 3, 4, 6, 8, 11, 18, 20, 21],
      "description": "Packet size statistics (mean, std, variance, min, max)"
    },
    "tcp_flags": {
      "count": 2,
      "features": [5, 7],
      "description": "TCP flag counts (ACK, PSH)"
    },
    "volume": {
      "count": 2,
      "features": [10, 19],
      "description": "Total bytes sent/received"
    },
    "rate": {
      "count": 2,
      "features": [12, 23],
      "description": "Packet and byte rates"
    },
    "timing": {
      "count": 2,
      "features": [17, 22],
      "description": "Flow duration and inter-arrival times"
    },
    "subflow": {
      "count": 3,
      "features": [2, 13, 16],
      "description": "Subflow aggregated statistics"
    },
    "tcp_window": {
      "count": 1,
      "features": [15],
      "description": "TCP window size"
    },
    "network": {
      "count": 1,
      "features": [14],
      "description": "Network layer information"
    },
    "activity": {
      "count": 1,
      "features": [9],
      "description": "Active packet counts"
    }
  },

  "model_performance": {
    "accuracy": 0.998753,
    "false_positives": 624,
    "false_negatives": 82,
    "true_positives": 111447,
    "true_negatives": 453996,
    "total_samples": 566149,
    "confusion_matrix": [[453996, 624], [82, 111447]]
  },

  "usage_notes": {
    "extraction_order": "Features MUST be extracted in the order specified by model_name field",
    "leading_spaces": "Feature names have leading spaces from original CIC-IDS2017 CSV - preserved for compatibility",
    "normalization": "Model does NOT require feature scaling (scaler.json exists but may not be used)",
    "validation": "Always validate feature count = 23 before inference",
    "code_sync": "If feature_extractor.cpp changes, verify this JSON still matches model expectations"
  },

  "validation": {
    "expected_feature_count": 23,
    "model_input_shape": [null, 23],
    "model_input_dtype": "float32",
    "model_output_labels": ["BENIGN", "ATTACK"],
    "scaler_required": true,
    "scaler_file": "level1/scaler.json"
  }
}